/*
 * BVNK API Endpoints
 * The BVNK API is designed to facilitate seamless and secure transactions including payments, channels, anddigital wallet transactions.
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Currency;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * Balance
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-07-05T20:47:27.517449+02:00[Africa/Johannesburg]")

public class Balance {
  @SerializedName("currency")
  private Currency currency = null;

  @SerializedName("walletId")
  private Long walletId = null;

  @SerializedName("available")
  private BigDecimal available = null;

  @SerializedName("reserved")
  private BigDecimal reserved = null;

  @SerializedName("convertedAvailable")
  private BigDecimal convertedAvailable = null;

  @SerializedName("convertedReserved")
  private BigDecimal convertedReserved = null;

  @SerializedName("total")
  private BigDecimal total = null;

  public Balance currency(Currency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @Schema(description = "")
  public Currency getCurrency() {
    return currency;
  }

  public void setCurrency(Currency currency) {
    this.currency = currency;
  }

  public Balance walletId(Long walletId) {
    this.walletId = walletId;
    return this;
  }

   /**
   * Get walletId
   * @return walletId
  **/
  @Schema(example = "255861", description = "")
  public Long getWalletId() {
    return walletId;
  }

  public void setWalletId(Long walletId) {
    this.walletId = walletId;
  }

  public Balance available(BigDecimal available) {
    this.available = available;
    return this;
  }

   /**
   * Get available
   * @return available
  **/
  @Schema(example = "100.03", description = "")
  public BigDecimal getAvailable() {
    return available;
  }

  public void setAvailable(BigDecimal available) {
    this.available = available;
  }

  public Balance reserved(BigDecimal reserved) {
    this.reserved = reserved;
    return this;
  }

   /**
   * Get reserved
   * @return reserved
  **/
  @Schema(example = "1.0", description = "")
  public BigDecimal getReserved() {
    return reserved;
  }

  public void setReserved(BigDecimal reserved) {
    this.reserved = reserved;
  }

  public Balance convertedAvailable(BigDecimal convertedAvailable) {
    this.convertedAvailable = convertedAvailable;
    return this;
  }

   /**
   * Get convertedAvailable
   * @return convertedAvailable
  **/
  @Schema(example = "100.0", description = "")
  public BigDecimal getConvertedAvailable() {
    return convertedAvailable;
  }

  public void setConvertedAvailable(BigDecimal convertedAvailable) {
    this.convertedAvailable = convertedAvailable;
  }

  public Balance convertedReserved(BigDecimal convertedReserved) {
    this.convertedReserved = convertedReserved;
    return this;
  }

   /**
   * Get convertedReserved
   * @return convertedReserved
  **/
  @Schema(example = "104.0", description = "")
  public BigDecimal getConvertedReserved() {
    return convertedReserved;
  }

  public void setConvertedReserved(BigDecimal convertedReserved) {
    this.convertedReserved = convertedReserved;
  }

  public Balance total(BigDecimal total) {
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @Schema(example = "101.03", description = "")
  public BigDecimal getTotal() {
    return total;
  }

  public void setTotal(BigDecimal total) {
    this.total = total;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Balance balance = (Balance) o;
    return Objects.equals(this.currency, balance.currency) &&
        Objects.equals(this.walletId, balance.walletId) &&
        Objects.equals(this.available, balance.available) &&
        Objects.equals(this.reserved, balance.reserved) &&
        Objects.equals(this.convertedAvailable, balance.convertedAvailable) &&
        Objects.equals(this.convertedReserved, balance.convertedReserved) &&
        Objects.equals(this.total, balance.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, walletId, available, reserved, convertedAvailable, convertedReserved, total);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Balance {\n");
    
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    available: ").append(toIndentedString(available)).append("\n");
    sb.append("    reserved: ").append(toIndentedString(reserved)).append("\n");
    sb.append("    convertedAvailable: ").append(toIndentedString(convertedAvailable)).append("\n");
    sb.append("    convertedReserved: ").append(toIndentedString(convertedReserved)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
