/*
 * BVNK API Endpoints
 * The BVNK API is designed to facilitate seamless and secure transactions including payments, channels, anddigital wallet transactions.
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.DirectionDto;
import io.swagger.client.model.PayInDetailDto;
import io.swagger.client.model.PayOutDetailDto;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * DTO required to create a payment in or a payment out
 */
@Schema(description = "DTO required to create a payment in or a payment out")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-07-05T20:47:27.517449+02:00[Africa/Johannesburg]")

public class PayRequestDto {
  @SerializedName("merchantId")
  private String merchantId = "5C8D8D78-366A-4AFB-B658-A64CE543C5DB";

  @SerializedName("amount")
  private BigDecimal amount = new BigDecimal(223.05);

  @SerializedName("expiryMinutes")
  private Integer expiryMinutes = 20;

  @SerializedName("currency")
  private String currency = "EUR";

  @SerializedName("returnUrl")
  private String returnUrl = "https://my-shop.com/payment-complete?ref=xyz";

  @SerializedName("reference")
  private String reference = "myUniqueRef333";

  @SerializedName("type")
  private DirectionDto type = null;

  @SerializedName("payInDetails")
  private PayInDetailDto payInDetails = null;

  @SerializedName("payOutDetails")
  private PayOutDetailDto payOutDetails = null;

  public PayRequestDto merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Your Merchant ID. You can find it on the Merchant Details page in your account
   * @return merchantId
  **/
  @Schema(required = true, description = "Your Merchant ID. You can find it on the Merchant Details page in your account")
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public PayRequestDto amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * payment amount
   * minimum: 0
   * @return amount
  **/
  @Schema(required = true, description = "payment amount")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public PayRequestDto expiryMinutes(Integer expiryMinutes) {
    this.expiryMinutes = expiryMinutes;
    return this;
  }

   /**
   * time period after which payment expires
   * @return expiryMinutes
  **/
  @Schema(description = "time period after which payment expires")
  public Integer getExpiryMinutes() {
    return expiryMinutes;
  }

  public void setExpiryMinutes(Integer expiryMinutes) {
    this.expiryMinutes = expiryMinutes;
  }

  public PayRequestDto currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * currency acronym
   * @return currency
  **/
  @Schema(required = true, description = "currency acronym")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public PayRequestDto returnUrl(String returnUrl) {
    this.returnUrl = returnUrl;
    return this;
  }

   /**
   * URL that the customer will be redirected to if they click a &#x27;Back to Merchant&#x27; button on the payment web page
   * @return returnUrl
  **/
  @Schema(description = "URL that the customer will be redirected to if they click a 'Back to Merchant' button on the payment web page")
  public String getReturnUrl() {
    return returnUrl;
  }

  public void setReturnUrl(String returnUrl) {
    this.returnUrl = returnUrl;
  }

  public PayRequestDto reference(String reference) {
    this.reference = reference;
    return this;
  }

   /**
   * Your payment reference ID. Feel free to submit any ID to tie the payment to your customer
   * @return reference
  **/
  @Schema(required = true, description = "Your payment reference ID. Feel free to submit any ID to tie the payment to your customer")
  public String getReference() {
    return reference;
  }

  public void setReference(String reference) {
    this.reference = reference;
  }

  public PayRequestDto type(DirectionDto type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public DirectionDto getType() {
    return type;
  }

  public void setType(DirectionDto type) {
    this.type = type;
  }

  public PayRequestDto payInDetails(PayInDetailDto payInDetails) {
    this.payInDetails = payInDetails;
    return this;
  }

   /**
   * Get payInDetails
   * @return payInDetails
  **/
  @Schema(description = "")
  public PayInDetailDto getPayInDetails() {
    return payInDetails;
  }

  public void setPayInDetails(PayInDetailDto payInDetails) {
    this.payInDetails = payInDetails;
  }

  public PayRequestDto payOutDetails(PayOutDetailDto payOutDetails) {
    this.payOutDetails = payOutDetails;
    return this;
  }

   /**
   * Get payOutDetails
   * @return payOutDetails
  **/
  @Schema(description = "")
  public PayOutDetailDto getPayOutDetails() {
    return payOutDetails;
  }

  public void setPayOutDetails(PayOutDetailDto payOutDetails) {
    this.payOutDetails = payOutDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayRequestDto payRequestDto = (PayRequestDto) o;
    return Objects.equals(this.merchantId, payRequestDto.merchantId) &&
        Objects.equals(this.amount, payRequestDto.amount) &&
        Objects.equals(this.expiryMinutes, payRequestDto.expiryMinutes) &&
        Objects.equals(this.currency, payRequestDto.currency) &&
        Objects.equals(this.returnUrl, payRequestDto.returnUrl) &&
        Objects.equals(this.reference, payRequestDto.reference) &&
        Objects.equals(this.type, payRequestDto.type) &&
        Objects.equals(this.payInDetails, payRequestDto.payInDetails) &&
        Objects.equals(this.payOutDetails, payRequestDto.payOutDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(merchantId, amount, expiryMinutes, currency, returnUrl, reference, type, payInDetails, payOutDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayRequestDto {\n");
    
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    expiryMinutes: ").append(toIndentedString(expiryMinutes)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    returnUrl: ").append(toIndentedString(returnUrl)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    payInDetails: ").append(toIndentedString(payInDetails)).append("\n");
    sb.append("    payOutDetails: ").append(toIndentedString(payOutDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
