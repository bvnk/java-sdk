/*
 * BVNK API Endpoints
 * The BVNK API is designed to facilitate seamless and secure transactions including payments, channels, anddigital wallet transactions.
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * Contains the type of currency, and amount to be paid and received
 */
@Schema(description = "Contains the type of currency, and amount to be paid and received")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-07-05T20:47:27.517449+02:00[Africa/Johannesburg]")

public class PayAmountsDto {
  @SerializedName("currency")
  private String currency = null;

  @SerializedName("amount")
  private BigDecimal amount = null;

  @SerializedName("actual")
  private BigDecimal actual = null;

  public PayAmountsDto currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * currency acronym
   * @return currency
  **/
  @Schema(example = "ETH", description = "currency acronym")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public PayAmountsDto amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * amount to be paid
   * @return amount
  **/
  @Schema(example = "0.0", description = "amount to be paid")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public PayAmountsDto actual(BigDecimal actual) {
    this.actual = actual;
    return this;
  }

   /**
   * actual amount paid/ received
   * @return actual
  **/
  @Schema(example = "76.45", description = "actual amount paid/ received")
  public BigDecimal getActual() {
    return actual;
  }

  public void setActual(BigDecimal actual) {
    this.actual = actual;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayAmountsDto payAmountsDto = (PayAmountsDto) o;
    return Objects.equals(this.currency, payAmountsDto.currency) &&
        Objects.equals(this.amount, payAmountsDto.amount) &&
        Objects.equals(this.actual, payAmountsDto.actual);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, amount, actual);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayAmountsDto {\n");
    
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    actual: ").append(toIndentedString(actual)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
