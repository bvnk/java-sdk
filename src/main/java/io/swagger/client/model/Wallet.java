/*
 * BVNK API Endpoints
 * The BVNK API is designed to facilitate seamless and secure transactions including payments, channels, anddigital wallet transactions.
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Currency;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Wallet
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-07-05T20:47:27.517449+02:00[Africa/Johannesburg]")

public class Wallet {
  @SerializedName("address")
  private String address = null;

  @SerializedName("alternatives")
  private List<Object> alternatives = null;

  @SerializedName("approxAvailable")
  private String approxAvailable = null;

  @SerializedName("approxBalance")
  private String approxBalance = null;

  @SerializedName("available")
  private Float available = null;

  @SerializedName("balance")
  private Float balance = null;

  @SerializedName("convertedAvailable")
  private Float convertedAvailable = null;

  @SerializedName("currency")
  private Currency currency = null;

  @SerializedName("custodianWallet")
  private Boolean custodianWallet = null;

  @SerializedName("depositFee")
  private Float depositFee = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("isEmoney")
  private Boolean isEmoney = false;

  @SerializedName("lookup")
  private String lookup = null;

  @SerializedName("protocol")
  private String protocol = null;

  @SerializedName("supportsDeposits")
  private Boolean supportsDeposits = true;

  @SerializedName("supportsThirdParty")
  private Boolean supportsThirdParty = false;

  @SerializedName("supportsWithdrawals")
  private Boolean supportsWithdrawals = true;

  @SerializedName("withdrawalFee")
  private Float withdrawalFee = null;

  public Wallet address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(example = "0x7be879d34f3Db833f70d9fE4873Bdd0cBcaC6bf6", description = "")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public Wallet alternatives(List<Object> alternatives) {
    this.alternatives = alternatives;
    return this;
  }

  public Wallet addAlternativesItem(Object alternativesItem) {
    if (this.alternatives == null) {
      this.alternatives = new ArrayList<Object>();
    }
    this.alternatives.add(alternativesItem);
    return this;
  }

   /**
   * Get alternatives
   * @return alternatives
  **/
  @Schema(example = "[]", description = "")
  public List<Object> getAlternatives() {
    return alternatives;
  }

  public void setAlternatives(List<Object> alternatives) {
    this.alternatives = alternatives;
  }

  public Wallet approxAvailable(String approxAvailable) {
    this.approxAvailable = approxAvailable;
    return this;
  }

   /**
   * Get approxAvailable
   * @return approxAvailable
  **/
  @Schema(example = "0.59573928", description = "")
  public String getApproxAvailable() {
    return approxAvailable;
  }

  public void setApproxAvailable(String approxAvailable) {
    this.approxAvailable = approxAvailable;
  }

  public Wallet approxBalance(String approxBalance) {
    this.approxBalance = approxBalance;
    return this;
  }

   /**
   * Get approxBalance
   * @return approxBalance
  **/
  @Schema(example = "0.59573928", description = "")
  public String getApproxBalance() {
    return approxBalance;
  }

  public void setApproxBalance(String approxBalance) {
    this.approxBalance = approxBalance;
  }

  public Wallet available(Float available) {
    this.available = available;
    return this;
  }

   /**
   * Get available
   * @return available
  **/
  @Schema(example = "0.59573928", description = "")
  public Float getAvailable() {
    return available;
  }

  public void setAvailable(Float available) {
    this.available = available;
  }

  public Wallet balance(Float balance) {
    this.balance = balance;
    return this;
  }

   /**
   * Get balance
   * @return balance
  **/
  @Schema(example = "0.59573928", description = "")
  public Float getBalance() {
    return balance;
  }

  public void setBalance(Float balance) {
    this.balance = balance;
  }

  public Wallet convertedAvailable(Float convertedAvailable) {
    this.convertedAvailable = convertedAvailable;
    return this;
  }

   /**
   * Get convertedAvailable
   * @return convertedAvailable
  **/
  @Schema(example = "20917.59", description = "")
  public Float getConvertedAvailable() {
    return convertedAvailable;
  }

  public void setConvertedAvailable(Float convertedAvailable) {
    this.convertedAvailable = convertedAvailable;
  }

  public Wallet currency(Currency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @Schema(description = "")
  public Currency getCurrency() {
    return currency;
  }

  public void setCurrency(Currency currency) {
    this.currency = currency;
  }

  public Wallet custodianWallet(Boolean custodianWallet) {
    this.custodianWallet = custodianWallet;
    return this;
  }

   /**
   * Get custodianWallet
   * @return custodianWallet
  **/
  @Schema(description = "")
  public Boolean isCustodianWallet() {
    return custodianWallet;
  }

  public void setCustodianWallet(Boolean custodianWallet) {
    this.custodianWallet = custodianWallet;
  }

  public Wallet depositFee(Float depositFee) {
    this.depositFee = depositFee;
    return this;
  }

   /**
   * Get depositFee
   * @return depositFee
  **/
  @Schema(example = "0.0", description = "")
  public Float getDepositFee() {
    return depositFee;
  }

  public void setDepositFee(Float depositFee) {
    this.depositFee = depositFee;
  }

  public Wallet description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(example = "ETH wallet", description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Wallet id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(example = "1432", description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Wallet isEmoney(Boolean isEmoney) {
    this.isEmoney = isEmoney;
    return this;
  }

   /**
   * Get isEmoney
   * @return isEmoney
  **/
  @Schema(description = "")
  public Boolean isIsEmoney() {
    return isEmoney;
  }

  public void setIsEmoney(Boolean isEmoney) {
    this.isEmoney = isEmoney;
  }

  public Wallet lookup(String lookup) {
    this.lookup = lookup;
    return this;
  }

   /**
   * Get lookup
   * @return lookup
  **/
  @Schema(description = "")
  public String getLookup() {
    return lookup;
  }

  public void setLookup(String lookup) {
    this.lookup = lookup;
  }

  public Wallet protocol(String protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @Schema(example = "ETH", description = "")
  public String getProtocol() {
    return protocol;
  }

  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  public Wallet supportsDeposits(Boolean supportsDeposits) {
    this.supportsDeposits = supportsDeposits;
    return this;
  }

   /**
   * Get supportsDeposits
   * @return supportsDeposits
  **/
  @Schema(description = "")
  public Boolean isSupportsDeposits() {
    return supportsDeposits;
  }

  public void setSupportsDeposits(Boolean supportsDeposits) {
    this.supportsDeposits = supportsDeposits;
  }

  public Wallet supportsThirdParty(Boolean supportsThirdParty) {
    this.supportsThirdParty = supportsThirdParty;
    return this;
  }

   /**
   * Get supportsThirdParty
   * @return supportsThirdParty
  **/
  @Schema(description = "")
  public Boolean isSupportsThirdParty() {
    return supportsThirdParty;
  }

  public void setSupportsThirdParty(Boolean supportsThirdParty) {
    this.supportsThirdParty = supportsThirdParty;
  }

  public Wallet supportsWithdrawals(Boolean supportsWithdrawals) {
    this.supportsWithdrawals = supportsWithdrawals;
    return this;
  }

   /**
   * Get supportsWithdrawals
   * @return supportsWithdrawals
  **/
  @Schema(description = "")
  public Boolean isSupportsWithdrawals() {
    return supportsWithdrawals;
  }

  public void setSupportsWithdrawals(Boolean supportsWithdrawals) {
    this.supportsWithdrawals = supportsWithdrawals;
  }

  public Wallet withdrawalFee(Float withdrawalFee) {
    this.withdrawalFee = withdrawalFee;
    return this;
  }

   /**
   * Get withdrawalFee
   * @return withdrawalFee
  **/
  @Schema(example = "0.001", description = "")
  public Float getWithdrawalFee() {
    return withdrawalFee;
  }

  public void setWithdrawalFee(Float withdrawalFee) {
    this.withdrawalFee = withdrawalFee;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Wallet wallet = (Wallet) o;
    return Objects.equals(this.address, wallet.address) &&
        Objects.equals(this.alternatives, wallet.alternatives) &&
        Objects.equals(this.approxAvailable, wallet.approxAvailable) &&
        Objects.equals(this.approxBalance, wallet.approxBalance) &&
        Objects.equals(this.available, wallet.available) &&
        Objects.equals(this.balance, wallet.balance) &&
        Objects.equals(this.convertedAvailable, wallet.convertedAvailable) &&
        Objects.equals(this.currency, wallet.currency) &&
        Objects.equals(this.custodianWallet, wallet.custodianWallet) &&
        Objects.equals(this.depositFee, wallet.depositFee) &&
        Objects.equals(this.description, wallet.description) &&
        Objects.equals(this.id, wallet.id) &&
        Objects.equals(this.isEmoney, wallet.isEmoney) &&
        Objects.equals(this.lookup, wallet.lookup) &&
        Objects.equals(this.protocol, wallet.protocol) &&
        Objects.equals(this.supportsDeposits, wallet.supportsDeposits) &&
        Objects.equals(this.supportsThirdParty, wallet.supportsThirdParty) &&
        Objects.equals(this.supportsWithdrawals, wallet.supportsWithdrawals) &&
        Objects.equals(this.withdrawalFee, wallet.withdrawalFee);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, alternatives, approxAvailable, approxBalance, available, balance, convertedAvailable, currency, custodianWallet, depositFee, description, id, isEmoney, lookup, protocol, supportsDeposits, supportsThirdParty, supportsWithdrawals, withdrawalFee);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Wallet {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    alternatives: ").append(toIndentedString(alternatives)).append("\n");
    sb.append("    approxAvailable: ").append(toIndentedString(approxAvailable)).append("\n");
    sb.append("    approxBalance: ").append(toIndentedString(approxBalance)).append("\n");
    sb.append("    available: ").append(toIndentedString(available)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    convertedAvailable: ").append(toIndentedString(convertedAvailable)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    custodianWallet: ").append(toIndentedString(custodianWallet)).append("\n");
    sb.append("    depositFee: ").append(toIndentedString(depositFee)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isEmoney: ").append(toIndentedString(isEmoney)).append("\n");
    sb.append("    lookup: ").append(toIndentedString(lookup)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    supportsDeposits: ").append(toIndentedString(supportsDeposits)).append("\n");
    sb.append("    supportsThirdParty: ").append(toIndentedString(supportsThirdParty)).append("\n");
    sb.append("    supportsWithdrawals: ").append(toIndentedString(supportsWithdrawals)).append("\n");
    sb.append("    withdrawalFee: ").append(toIndentedString(withdrawalFee)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
