/*
 * BVNK API Endpoints
 * The BVNK API is designed to facilitate seamless and secure transactions including payments, channels, anddigital wallet transactions.
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ExchangeRateDto;
import io.swagger.client.model.NetworkFee;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * MerchantChannelPayment
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-07-05T20:47:27.517449+02:00[Africa/Johannesburg]")

public class MerchantChannelPayment {
  @SerializedName("channelId")
  private String channelId = null;

  @SerializedName("merchantId")
  private String merchantId = null;

  @SerializedName("merchantDisplayName")
  private String merchantDisplayName = null;

  @SerializedName("reference")
  private String reference = null;

  @SerializedName("dateCreated")
  private Long dateCreated = 0l;

  @SerializedName("lastUpdated")
  private Long lastUpdated = 0l;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    @SerializedName("DETECTED")
    DETECTED("DETECTED"),
    @SerializedName("COMPLETE")
    COMPLETE("COMPLETE"),
    @SerializedName("UNKNOWN")
    UNKNOWN("UNKNOWN");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("uuid")
  private String uuid = null;

  @SerializedName("hash")
  private String hash = null;

  @SerializedName("address")
  private String address = null;

  @SerializedName("tag")
  private String tag = null;

  @SerializedName("paidCurrency")
  private String paidCurrency = null;

  @SerializedName("displayCurrency")
  private String displayCurrency = null;

  @SerializedName("walletCurrency")
  private String walletCurrency = null;

  @SerializedName("feeCurrency")
  private String feeCurrency = null;

  @SerializedName("paidAmount")
  private BigDecimal paidAmount = new BigDecimal(0);

  @SerializedName("displayAmount")
  private BigDecimal displayAmount = new BigDecimal(0);

  @SerializedName("walletAmount")
  private BigDecimal walletAmount = new BigDecimal(0);

  @SerializedName("feeAmount")
  private BigDecimal feeAmount = new BigDecimal(0);

  @SerializedName("exchangeRate")
  private ExchangeRateDto exchangeRate = null;

  @SerializedName("displayRate")
  private ExchangeRateDto displayRate = null;

  @SerializedName("risk")
  private ExchangeRateDto risk = null;

  @SerializedName("sources")
  private List<String> sources = null;

  @SerializedName("networkFee")
  private NetworkFee networkFee = null;

  public MerchantChannelPayment channelId(String channelId) {
    this.channelId = channelId;
    return this;
  }

   /**
   * Get channelId
   * @return channelId
  **/
  @Schema(example = "9d1f67f2-a647-404b-9b02-247c77be81d0", description = "")
  public String getChannelId() {
    return channelId;
  }

  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }

  public MerchantChannelPayment merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Get merchantId
   * @return merchantId
  **/
  @Schema(example = "0a12a214-1619-43fa-9be1-0029f6a440a0", description = "")
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public MerchantChannelPayment merchantDisplayName(String merchantDisplayName) {
    this.merchantDisplayName = merchantDisplayName;
    return this;
  }

   /**
   * Get merchantDisplayName
   * @return merchantDisplayName
  **/
  @Schema(example = "Merchant A", description = "")
  public String getMerchantDisplayName() {
    return merchantDisplayName;
  }

  public void setMerchantDisplayName(String merchantDisplayName) {
    this.merchantDisplayName = merchantDisplayName;
  }

  public MerchantChannelPayment reference(String reference) {
    this.reference = reference;
    return this;
  }

   /**
   * Get reference
   * @return reference
  **/
  @Schema(example = "c1b933d5-3354-4f83-a05f-0b53f1be85f2", description = "")
  public String getReference() {
    return reference;
  }

  public void setReference(String reference) {
    this.reference = reference;
  }

  public MerchantChannelPayment dateCreated(Long dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * Get dateCreated
   * @return dateCreated
  **/
  @Schema(example = "1631619489000", description = "")
  public Long getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(Long dateCreated) {
    this.dateCreated = dateCreated;
  }

  public MerchantChannelPayment lastUpdated(Long lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

   /**
   * Get lastUpdated
   * @return lastUpdated
  **/
  @Schema(example = "1631619562000", description = "")
  public Long getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(Long lastUpdated) {
    this.lastUpdated = lastUpdated;
  }

  public MerchantChannelPayment status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public MerchantChannelPayment uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(example = "c0dc9c14-0312-4a6b-a1a3-a6dcebdcc8a4", description = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public MerchantChannelPayment hash(String hash) {
    this.hash = hash;
    return this;
  }

   /**
   * Get hash
   * @return hash
  **/
  @Schema(example = "0x152f2b3a3650a3e2e132abca0f81421c552ae14bc8466fac16889e8d32b3fd6a", description = "")
  public String getHash() {
    return hash;
  }

  public void setHash(String hash) {
    this.hash = hash;
  }

  public MerchantChannelPayment address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(example = "0xb4e8bb9918248007dc9d0dc12ae1142f0d62ef0e", description = "")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public MerchantChannelPayment tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * Get tag
   * @return tag
  **/
  @Schema(description = "")
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }

  public MerchantChannelPayment paidCurrency(String paidCurrency) {
    this.paidCurrency = paidCurrency;
    return this;
  }

   /**
   * Get paidCurrency
   * @return paidCurrency
  **/
  @Schema(example = "ETH", description = "")
  public String getPaidCurrency() {
    return paidCurrency;
  }

  public void setPaidCurrency(String paidCurrency) {
    this.paidCurrency = paidCurrency;
  }

  public MerchantChannelPayment displayCurrency(String displayCurrency) {
    this.displayCurrency = displayCurrency;
    return this;
  }

   /**
   * Get displayCurrency
   * @return displayCurrency
  **/
  @Schema(example = "JPY", description = "")
  public String getDisplayCurrency() {
    return displayCurrency;
  }

  public void setDisplayCurrency(String displayCurrency) {
    this.displayCurrency = displayCurrency;
  }

  public MerchantChannelPayment walletCurrency(String walletCurrency) {
    this.walletCurrency = walletCurrency;
    return this;
  }

   /**
   * Get walletCurrency
   * @return walletCurrency
  **/
  @Schema(example = "EUR", description = "")
  public String getWalletCurrency() {
    return walletCurrency;
  }

  public void setWalletCurrency(String walletCurrency) {
    this.walletCurrency = walletCurrency;
  }

  public MerchantChannelPayment feeCurrency(String feeCurrency) {
    this.feeCurrency = feeCurrency;
    return this;
  }

   /**
   * Get feeCurrency
   * @return feeCurrency
  **/
  @Schema(example = "EUR", description = "")
  public String getFeeCurrency() {
    return feeCurrency;
  }

  public void setFeeCurrency(String feeCurrency) {
    this.feeCurrency = feeCurrency;
  }

  public MerchantChannelPayment paidAmount(BigDecimal paidAmount) {
    this.paidAmount = paidAmount;
    return this;
  }

   /**
   * Get paidAmount
   * @return paidAmount
  **/
  @Schema(example = "0.01", description = "")
  public BigDecimal getPaidAmount() {
    return paidAmount;
  }

  public void setPaidAmount(BigDecimal paidAmount) {
    this.paidAmount = paidAmount;
  }

  public MerchantChannelPayment displayAmount(BigDecimal displayAmount) {
    this.displayAmount = displayAmount;
    return this;
  }

   /**
   * Get displayAmount
   * @return displayAmount
  **/
  @Schema(example = "3592.27", description = "")
  public BigDecimal getDisplayAmount() {
    return displayAmount;
  }

  public void setDisplayAmount(BigDecimal displayAmount) {
    this.displayAmount = displayAmount;
  }

  public MerchantChannelPayment walletAmount(BigDecimal walletAmount) {
    this.walletAmount = walletAmount;
    return this;
  }

   /**
   * Get walletAmount
   * @return walletAmount
  **/
  @Schema(example = "27.62", description = "")
  public BigDecimal getWalletAmount() {
    return walletAmount;
  }

  public void setWalletAmount(BigDecimal walletAmount) {
    this.walletAmount = walletAmount;
  }

  public MerchantChannelPayment feeAmount(BigDecimal feeAmount) {
    this.feeAmount = feeAmount;
    return this;
  }

   /**
   * Get feeAmount
   * @return feeAmount
  **/
  @Schema(example = "0.27", description = "")
  public BigDecimal getFeeAmount() {
    return feeAmount;
  }

  public void setFeeAmount(BigDecimal feeAmount) {
    this.feeAmount = feeAmount;
  }

  public MerchantChannelPayment exchangeRate(ExchangeRateDto exchangeRate) {
    this.exchangeRate = exchangeRate;
    return this;
  }

   /**
   * Get exchangeRate
   * @return exchangeRate
  **/
  @Schema(description = "")
  public ExchangeRateDto getExchangeRate() {
    return exchangeRate;
  }

  public void setExchangeRate(ExchangeRateDto exchangeRate) {
    this.exchangeRate = exchangeRate;
  }

  public MerchantChannelPayment displayRate(ExchangeRateDto displayRate) {
    this.displayRate = displayRate;
    return this;
  }

   /**
   * Get displayRate
   * @return displayRate
  **/
  @Schema(description = "")
  public ExchangeRateDto getDisplayRate() {
    return displayRate;
  }

  public void setDisplayRate(ExchangeRateDto displayRate) {
    this.displayRate = displayRate;
  }

  public MerchantChannelPayment risk(ExchangeRateDto risk) {
    this.risk = risk;
    return this;
  }

   /**
   * Get risk
   * @return risk
  **/
  @Schema(description = "")
  public ExchangeRateDto getRisk() {
    return risk;
  }

  public void setRisk(ExchangeRateDto risk) {
    this.risk = risk;
  }

  public MerchantChannelPayment sources(List<String> sources) {
    this.sources = sources;
    return this;
  }

  public MerchantChannelPayment addSourcesItem(String sourcesItem) {
    if (this.sources == null) {
      this.sources = new ArrayList<String>();
    }
    this.sources.add(sourcesItem);
    return this;
  }

   /**
   * Get sources
   * @return sources
  **/
  @Schema(description = "")
  public List<String> getSources() {
    return sources;
  }

  public void setSources(List<String> sources) {
    this.sources = sources;
  }

  public MerchantChannelPayment networkFee(NetworkFee networkFee) {
    this.networkFee = networkFee;
    return this;
  }

   /**
   * Get networkFee
   * @return networkFee
  **/
  @Schema(description = "")
  public NetworkFee getNetworkFee() {
    return networkFee;
  }

  public void setNetworkFee(NetworkFee networkFee) {
    this.networkFee = networkFee;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MerchantChannelPayment merchantChannelPayment = (MerchantChannelPayment) o;
    return Objects.equals(this.channelId, merchantChannelPayment.channelId) &&
        Objects.equals(this.merchantId, merchantChannelPayment.merchantId) &&
        Objects.equals(this.merchantDisplayName, merchantChannelPayment.merchantDisplayName) &&
        Objects.equals(this.reference, merchantChannelPayment.reference) &&
        Objects.equals(this.dateCreated, merchantChannelPayment.dateCreated) &&
        Objects.equals(this.lastUpdated, merchantChannelPayment.lastUpdated) &&
        Objects.equals(this.status, merchantChannelPayment.status) &&
        Objects.equals(this.uuid, merchantChannelPayment.uuid) &&
        Objects.equals(this.hash, merchantChannelPayment.hash) &&
        Objects.equals(this.address, merchantChannelPayment.address) &&
        Objects.equals(this.tag, merchantChannelPayment.tag) &&
        Objects.equals(this.paidCurrency, merchantChannelPayment.paidCurrency) &&
        Objects.equals(this.displayCurrency, merchantChannelPayment.displayCurrency) &&
        Objects.equals(this.walletCurrency, merchantChannelPayment.walletCurrency) &&
        Objects.equals(this.feeCurrency, merchantChannelPayment.feeCurrency) &&
        Objects.equals(this.paidAmount, merchantChannelPayment.paidAmount) &&
        Objects.equals(this.displayAmount, merchantChannelPayment.displayAmount) &&
        Objects.equals(this.walletAmount, merchantChannelPayment.walletAmount) &&
        Objects.equals(this.feeAmount, merchantChannelPayment.feeAmount) &&
        Objects.equals(this.exchangeRate, merchantChannelPayment.exchangeRate) &&
        Objects.equals(this.displayRate, merchantChannelPayment.displayRate) &&
        Objects.equals(this.risk, merchantChannelPayment.risk) &&
        Objects.equals(this.sources, merchantChannelPayment.sources) &&
        Objects.equals(this.networkFee, merchantChannelPayment.networkFee);
  }

  @Override
  public int hashCode() {
    return Objects.hash(channelId, merchantId, merchantDisplayName, reference, dateCreated, lastUpdated, status, uuid, hash, address, tag, paidCurrency, displayCurrency, walletCurrency, feeCurrency, paidAmount, displayAmount, walletAmount, feeAmount, exchangeRate, displayRate, risk, sources, networkFee);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MerchantChannelPayment {\n");
    
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    merchantDisplayName: ").append(toIndentedString(merchantDisplayName)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    paidCurrency: ").append(toIndentedString(paidCurrency)).append("\n");
    sb.append("    displayCurrency: ").append(toIndentedString(displayCurrency)).append("\n");
    sb.append("    walletCurrency: ").append(toIndentedString(walletCurrency)).append("\n");
    sb.append("    feeCurrency: ").append(toIndentedString(feeCurrency)).append("\n");
    sb.append("    paidAmount: ").append(toIndentedString(paidAmount)).append("\n");
    sb.append("    displayAmount: ").append(toIndentedString(displayAmount)).append("\n");
    sb.append("    walletAmount: ").append(toIndentedString(walletAmount)).append("\n");
    sb.append("    feeAmount: ").append(toIndentedString(feeAmount)).append("\n");
    sb.append("    exchangeRate: ").append(toIndentedString(exchangeRate)).append("\n");
    sb.append("    displayRate: ").append(toIndentedString(displayRate)).append("\n");
    sb.append("    risk: ").append(toIndentedString(risk)).append("\n");
    sb.append("    sources: ").append(toIndentedString(sources)).append("\n");
    sb.append("    networkFee: ").append(toIndentedString(networkFee)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
