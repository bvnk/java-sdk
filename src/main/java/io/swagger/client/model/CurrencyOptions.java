/*
 * BVNK API Endpoints
 * The BVNK API is designed to facilitate seamless and secure transactions including payments, channels, anddigital wallet transactions.
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * CurrencyOptions
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-07-05T20:47:27.517449+02:00[Africa/Johannesburg]")

public class CurrencyOptions {
  @SerializedName("transaction")
  private String transaction = null;

  @SerializedName("explorer")
  private String explorer = null;

  @SerializedName("address")
  private String address = null;

  @SerializedName("confirmations")
  private Integer confirmations = null;

  public CurrencyOptions transaction(String transaction) {
    this.transaction = transaction;
    return this;
  }

   /**
   * Get transaction
   * @return transaction
  **/
  @Schema(example = "https://etherscan.io/tx/{{hash}}", description = "")
  public String getTransaction() {
    return transaction;
  }

  public void setTransaction(String transaction) {
    this.transaction = transaction;
  }

  public CurrencyOptions explorer(String explorer) {
    this.explorer = explorer;
    return this;
  }

   /**
   * Get explorer
   * @return explorer
  **/
  @Schema(example = "https://etherscan.io/", description = "")
  public String getExplorer() {
    return explorer;
  }

  public void setExplorer(String explorer) {
    this.explorer = explorer;
  }

  public CurrencyOptions address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(example = "https://etherscan.io/address/{{address}}", description = "")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public CurrencyOptions confirmations(Integer confirmations) {
    this.confirmations = confirmations;
    return this;
  }

   /**
   * Get confirmations
   * @return confirmations
  **/
  @Schema(example = "12", description = "")
  public Integer getConfirmations() {
    return confirmations;
  }

  public void setConfirmations(Integer confirmations) {
    this.confirmations = confirmations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CurrencyOptions currencyOptions = (CurrencyOptions) o;
    return Objects.equals(this.transaction, currencyOptions.transaction) &&
        Objects.equals(this.explorer, currencyOptions.explorer) &&
        Objects.equals(this.address, currencyOptions.address) &&
        Objects.equals(this.confirmations, currencyOptions.confirmations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transaction, explorer, address, confirmations);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CurrencyOptions {\n");
    
    sb.append("    transaction: ").append(toIndentedString(transaction)).append("\n");
    sb.append("    explorer: ").append(toIndentedString(explorer)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    confirmations: ").append(toIndentedString(confirmations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
