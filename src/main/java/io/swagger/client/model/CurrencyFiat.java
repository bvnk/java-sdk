/*
 * BVNK API Endpoints
 * The BVNK API is designed to facilitate seamless and secure transactions including payments, channels, anddigital wallet transactions.
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * CurrencyFiat
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-07-05T20:47:27.517449+02:00[Africa/Johannesburg]")

public class CurrencyFiat {
  @SerializedName("code")
  private String code = null;

  @SerializedName("depositFee")
  private BigDecimal depositFee = null;

  @SerializedName("fiat")
  private Boolean fiat = true;

  @SerializedName("icon")
  private String icon = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("options")
  private Object options = null;

  @SerializedName("pricePrecision")
  private Integer pricePrecision = 2;

  @SerializedName("protocols")
  private List<Object> protocols = null;

  @SerializedName("quantityPrecision")
  private Integer quantityPrecision = 2;

  @SerializedName("supportsDeposits")
  private Boolean supportsDeposits = true;

  @SerializedName("supportsWithdrawals")
  private Boolean supportsWithdrawals = true;

  @SerializedName("withdrawalFee")
  private BigDecimal withdrawalFee = null;

  @SerializedName("withdrawalParameters")
  private List<Object> withdrawalParameters = null;

  public CurrencyFiat code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @Schema(example = "EUR", description = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public CurrencyFiat depositFee(BigDecimal depositFee) {
    this.depositFee = depositFee;
    return this;
  }

   /**
   * Get depositFee
   * @return depositFee
  **/
  @Schema(example = "0.0", description = "")
  public BigDecimal getDepositFee() {
    return depositFee;
  }

  public void setDepositFee(BigDecimal depositFee) {
    this.depositFee = depositFee;
  }

  public CurrencyFiat fiat(Boolean fiat) {
    this.fiat = fiat;
    return this;
  }

   /**
   * Get fiat
   * @return fiat
  **/
  @Schema(description = "")
  public Boolean isFiat() {
    return fiat;
  }

  public void setFiat(Boolean fiat) {
    this.fiat = fiat;
  }

  public CurrencyFiat icon(String icon) {
    this.icon = icon;
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @Schema(description = "")
  public String getIcon() {
    return icon;
  }

  public void setIcon(String icon) {
    this.icon = icon;
  }

  public CurrencyFiat id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(example = "1773", description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public CurrencyFiat name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(example = "Euro", description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CurrencyFiat options(Object options) {
    this.options = options;
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @Schema(description = "")
  public Object getOptions() {
    return options;
  }

  public void setOptions(Object options) {
    this.options = options;
  }

  public CurrencyFiat pricePrecision(Integer pricePrecision) {
    this.pricePrecision = pricePrecision;
    return this;
  }

   /**
   * Get pricePrecision
   * @return pricePrecision
  **/
  @Schema(description = "")
  public Integer getPricePrecision() {
    return pricePrecision;
  }

  public void setPricePrecision(Integer pricePrecision) {
    this.pricePrecision = pricePrecision;
  }

  public CurrencyFiat protocols(List<Object> protocols) {
    this.protocols = protocols;
    return this;
  }

  public CurrencyFiat addProtocolsItem(Object protocolsItem) {
    if (this.protocols == null) {
      this.protocols = new ArrayList<Object>();
    }
    this.protocols.add(protocolsItem);
    return this;
  }

   /**
   * Get protocols
   * @return protocols
  **/
  @Schema(example = "[]", description = "")
  public List<Object> getProtocols() {
    return protocols;
  }

  public void setProtocols(List<Object> protocols) {
    this.protocols = protocols;
  }

  public CurrencyFiat quantityPrecision(Integer quantityPrecision) {
    this.quantityPrecision = quantityPrecision;
    return this;
  }

   /**
   * Get quantityPrecision
   * @return quantityPrecision
  **/
  @Schema(description = "")
  public Integer getQuantityPrecision() {
    return quantityPrecision;
  }

  public void setQuantityPrecision(Integer quantityPrecision) {
    this.quantityPrecision = quantityPrecision;
  }

  public CurrencyFiat supportsDeposits(Boolean supportsDeposits) {
    this.supportsDeposits = supportsDeposits;
    return this;
  }

   /**
   * Get supportsDeposits
   * @return supportsDeposits
  **/
  @Schema(description = "")
  public Boolean isSupportsDeposits() {
    return supportsDeposits;
  }

  public void setSupportsDeposits(Boolean supportsDeposits) {
    this.supportsDeposits = supportsDeposits;
  }

  public CurrencyFiat supportsWithdrawals(Boolean supportsWithdrawals) {
    this.supportsWithdrawals = supportsWithdrawals;
    return this;
  }

   /**
   * Get supportsWithdrawals
   * @return supportsWithdrawals
  **/
  @Schema(description = "")
  public Boolean isSupportsWithdrawals() {
    return supportsWithdrawals;
  }

  public void setSupportsWithdrawals(Boolean supportsWithdrawals) {
    this.supportsWithdrawals = supportsWithdrawals;
  }

  public CurrencyFiat withdrawalFee(BigDecimal withdrawalFee) {
    this.withdrawalFee = withdrawalFee;
    return this;
  }

   /**
   * Get withdrawalFee
   * @return withdrawalFee
  **/
  @Schema(example = "0.4", description = "")
  public BigDecimal getWithdrawalFee() {
    return withdrawalFee;
  }

  public void setWithdrawalFee(BigDecimal withdrawalFee) {
    this.withdrawalFee = withdrawalFee;
  }

  public CurrencyFiat withdrawalParameters(List<Object> withdrawalParameters) {
    this.withdrawalParameters = withdrawalParameters;
    return this;
  }

  public CurrencyFiat addWithdrawalParametersItem(Object withdrawalParametersItem) {
    if (this.withdrawalParameters == null) {
      this.withdrawalParameters = new ArrayList<Object>();
    }
    this.withdrawalParameters.add(withdrawalParametersItem);
    return this;
  }

   /**
   * Get withdrawalParameters
   * @return withdrawalParameters
  **/
  @Schema(example = "[]", description = "")
  public List<Object> getWithdrawalParameters() {
    return withdrawalParameters;
  }

  public void setWithdrawalParameters(List<Object> withdrawalParameters) {
    this.withdrawalParameters = withdrawalParameters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CurrencyFiat currencyFiat = (CurrencyFiat) o;
    return Objects.equals(this.code, currencyFiat.code) &&
        Objects.equals(this.depositFee, currencyFiat.depositFee) &&
        Objects.equals(this.fiat, currencyFiat.fiat) &&
        Objects.equals(this.icon, currencyFiat.icon) &&
        Objects.equals(this.id, currencyFiat.id) &&
        Objects.equals(this.name, currencyFiat.name) &&
        Objects.equals(this.options, currencyFiat.options) &&
        Objects.equals(this.pricePrecision, currencyFiat.pricePrecision) &&
        Objects.equals(this.protocols, currencyFiat.protocols) &&
        Objects.equals(this.quantityPrecision, currencyFiat.quantityPrecision) &&
        Objects.equals(this.supportsDeposits, currencyFiat.supportsDeposits) &&
        Objects.equals(this.supportsWithdrawals, currencyFiat.supportsWithdrawals) &&
        Objects.equals(this.withdrawalFee, currencyFiat.withdrawalFee) &&
        Objects.equals(this.withdrawalParameters, currencyFiat.withdrawalParameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, depositFee, fiat, icon, id, name, options, pricePrecision, protocols, quantityPrecision, supportsDeposits, supportsWithdrawals, withdrawalFee, withdrawalParameters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CurrencyFiat {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    depositFee: ").append(toIndentedString(depositFee)).append("\n");
    sb.append("    fiat: ").append(toIndentedString(fiat)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    pricePrecision: ").append(toIndentedString(pricePrecision)).append("\n");
    sb.append("    protocols: ").append(toIndentedString(protocols)).append("\n");
    sb.append("    quantityPrecision: ").append(toIndentedString(quantityPrecision)).append("\n");
    sb.append("    supportsDeposits: ").append(toIndentedString(supportsDeposits)).append("\n");
    sb.append("    supportsWithdrawals: ").append(toIndentedString(supportsWithdrawals)).append("\n");
    sb.append("    withdrawalFee: ").append(toIndentedString(withdrawalFee)).append("\n");
    sb.append("    withdrawalParameters: ").append(toIndentedString(withdrawalParameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
