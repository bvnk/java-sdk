/*
 * BVNK API Endpoints
 * The BVNK API is designed to facilitate seamless and secure transactions including payments, channels, anddigital wallet transactions.
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AlternativeAddress;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * MerchantChannel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-07-05T20:47:27.517449+02:00[Africa/Johannesburg]")

public class MerchantChannel {
  @SerializedName("id")
  private Integer id = 0;

  @SerializedName("dateCreated")
  private Integer dateCreated = 0;

  @SerializedName("lastUpdated")
  private Integer lastUpdated = 0;

  @SerializedName("merchantId")
  private String merchantId = null;

  @SerializedName("walletCurrency")
  private String walletCurrency = null;

  @SerializedName("displayCurrency")
  private String displayCurrency = null;

  @SerializedName("payCurrency")
  private String payCurrency = null;

  @SerializedName("address")
  private String address = null;

  @SerializedName("tag")
  private String tag = null;

  @SerializedName("protocol")
  private String protocol = null;

  @SerializedName("reference")
  private String reference = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    @SerializedName("OPEN")
    OPEN("OPEN"),
    @SerializedName("CLOSED")
    CLOSED("CLOSED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("uuid")
  private String uuid = null;

  @SerializedName("redirectUrl")
  private String redirectUrl = null;

  @SerializedName("uri")
  private String uri = null;

  @SerializedName("alternatives")
  private List<AlternativeAddress> alternatives = null;

  public MerchantChannel id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(example = "65", description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public MerchantChannel dateCreated(Integer dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * Get dateCreated
   * @return dateCreated
  **/
  @Schema(example = "1631619193321", description = "")
  public Integer getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(Integer dateCreated) {
    this.dateCreated = dateCreated;
  }

  public MerchantChannel lastUpdated(Integer lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

   /**
   * Get lastUpdated
   * @return lastUpdated
  **/
  @Schema(example = "1631619193321", description = "")
  public Integer getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(Integer lastUpdated) {
    this.lastUpdated = lastUpdated;
  }

  public MerchantChannel merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Get merchantId
   * @return merchantId
  **/
  @Schema(example = "0a12a214-1619-43fa-9be1-0029f6a440a0", description = "")
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public MerchantChannel walletCurrency(String walletCurrency) {
    this.walletCurrency = walletCurrency;
    return this;
  }

   /**
   * Get walletCurrency
   * @return walletCurrency
  **/
  @Schema(example = "EUR", description = "")
  public String getWalletCurrency() {
    return walletCurrency;
  }

  public void setWalletCurrency(String walletCurrency) {
    this.walletCurrency = walletCurrency;
  }

  public MerchantChannel displayCurrency(String displayCurrency) {
    this.displayCurrency = displayCurrency;
    return this;
  }

   /**
   * Get displayCurrency
   * @return displayCurrency
  **/
  @Schema(example = "JPY", description = "")
  public String getDisplayCurrency() {
    return displayCurrency;
  }

  public void setDisplayCurrency(String displayCurrency) {
    this.displayCurrency = displayCurrency;
  }

  public MerchantChannel payCurrency(String payCurrency) {
    this.payCurrency = payCurrency;
    return this;
  }

   /**
   * Get payCurrency
   * @return payCurrency
  **/
  @Schema(example = "ETH", description = "")
  public String getPayCurrency() {
    return payCurrency;
  }

  public void setPayCurrency(String payCurrency) {
    this.payCurrency = payCurrency;
  }

  public MerchantChannel address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(example = "0xb4e8bb9918248007dc9d0dc12ae1142f0d62ef0e", description = "")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public MerchantChannel tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * Get tag
   * @return tag
  **/
  @Schema(description = "")
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }

  public MerchantChannel protocol(String protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @Schema(example = "ETH", description = "")
  public String getProtocol() {
    return protocol;
  }

  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  public MerchantChannel reference(String reference) {
    this.reference = reference;
    return this;
  }

   /**
   * Get reference
   * @return reference
  **/
  @Schema(example = "c1b933d5-3354-4f83-a05f-0b53f1be85f2", description = "")
  public String getReference() {
    return reference;
  }

  public void setReference(String reference) {
    this.reference = reference;
  }

  public MerchantChannel status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public MerchantChannel uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(example = "9d1f67f2-a647-404b-9b02-247c77be81d0", description = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public MerchantChannel redirectUrl(String redirectUrl) {
    this.redirectUrl = redirectUrl;
    return this;
  }

   /**
   * Get redirectUrl
   * @return redirectUrl
  **/
  @Schema(example = "https://pay.sandbox.bvnk.com/channel?uuid=9d1f67f2-a647-404b-9b02-247c77be81d0", description = "")
  public String getRedirectUrl() {
    return redirectUrl;
  }

  public void setRedirectUrl(String redirectUrl) {
    this.redirectUrl = redirectUrl;
  }

  public MerchantChannel uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * Get uri
   * @return uri
  **/
  @Schema(example = "ethereum:0xb4e8bb9918248007dc9d0dc12ae1142f0d62ef0e", description = "")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }

  public MerchantChannel alternatives(List<AlternativeAddress> alternatives) {
    this.alternatives = alternatives;
    return this;
  }

  public MerchantChannel addAlternativesItem(AlternativeAddress alternativesItem) {
    if (this.alternatives == null) {
      this.alternatives = new ArrayList<AlternativeAddress>();
    }
    this.alternatives.add(alternativesItem);
    return this;
  }

   /**
   * Get alternatives
   * @return alternatives
  **/
  @Schema(description = "")
  public List<AlternativeAddress> getAlternatives() {
    return alternatives;
  }

  public void setAlternatives(List<AlternativeAddress> alternatives) {
    this.alternatives = alternatives;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MerchantChannel merchantChannel = (MerchantChannel) o;
    return Objects.equals(this.id, merchantChannel.id) &&
        Objects.equals(this.dateCreated, merchantChannel.dateCreated) &&
        Objects.equals(this.lastUpdated, merchantChannel.lastUpdated) &&
        Objects.equals(this.merchantId, merchantChannel.merchantId) &&
        Objects.equals(this.walletCurrency, merchantChannel.walletCurrency) &&
        Objects.equals(this.displayCurrency, merchantChannel.displayCurrency) &&
        Objects.equals(this.payCurrency, merchantChannel.payCurrency) &&
        Objects.equals(this.address, merchantChannel.address) &&
        Objects.equals(this.tag, merchantChannel.tag) &&
        Objects.equals(this.protocol, merchantChannel.protocol) &&
        Objects.equals(this.reference, merchantChannel.reference) &&
        Objects.equals(this.status, merchantChannel.status) &&
        Objects.equals(this.uuid, merchantChannel.uuid) &&
        Objects.equals(this.redirectUrl, merchantChannel.redirectUrl) &&
        Objects.equals(this.uri, merchantChannel.uri) &&
        Objects.equals(this.alternatives, merchantChannel.alternatives);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, dateCreated, lastUpdated, merchantId, walletCurrency, displayCurrency, payCurrency, address, tag, protocol, reference, status, uuid, redirectUrl, uri, alternatives);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MerchantChannel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    walletCurrency: ").append(toIndentedString(walletCurrency)).append("\n");
    sb.append("    displayCurrency: ").append(toIndentedString(displayCurrency)).append("\n");
    sb.append("    payCurrency: ").append(toIndentedString(payCurrency)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    redirectUrl: ").append(toIndentedString(redirectUrl)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    alternatives: ").append(toIndentedString(alternatives)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
