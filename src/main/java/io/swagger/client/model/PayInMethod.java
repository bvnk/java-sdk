/*
 * BVNK API Endpoints
 * The BVNK API is designed to facilitate seamless and secure transactions including payments, channels, anddigital wallet transactions.
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AccountMethod;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * PayInMethod
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-07-05T20:47:27.517449+02:00[Africa/Johannesburg]")

public class PayInMethod {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("settlementCurrency")
  private String settlementCurrency = null;

  @SerializedName("requestedCurrency")
  private String requestedCurrency = null;

  @SerializedName("estimatedExchangeRate")
  private BigDecimal estimatedExchangeRate = null;

  @SerializedName("accountMethods")
  private List<AccountMethod> accountMethods = null;

  public PayInMethod id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(example = "1432", description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public PayInMethod code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @Schema(example = "wallet", description = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public PayInMethod settlementCurrency(String settlementCurrency) {
    this.settlementCurrency = settlementCurrency;
    return this;
  }

   /**
   * Get settlementCurrency
   * @return settlementCurrency
  **/
  @Schema(example = "USD", description = "")
  public String getSettlementCurrency() {
    return settlementCurrency;
  }

  public void setSettlementCurrency(String settlementCurrency) {
    this.settlementCurrency = settlementCurrency;
  }

  public PayInMethod requestedCurrency(String requestedCurrency) {
    this.requestedCurrency = requestedCurrency;
    return this;
  }

   /**
   * Get requestedCurrency
   * @return requestedCurrency
  **/
  @Schema(example = "EUR", description = "")
  public String getRequestedCurrency() {
    return requestedCurrency;
  }

  public void setRequestedCurrency(String requestedCurrency) {
    this.requestedCurrency = requestedCurrency;
  }

  public PayInMethod estimatedExchangeRate(BigDecimal estimatedExchangeRate) {
    this.estimatedExchangeRate = estimatedExchangeRate;
    return this;
  }

   /**
   * Get estimatedExchangeRate
   * @return estimatedExchangeRate
  **/
  @Schema(example = "0.923", description = "")
  public BigDecimal getEstimatedExchangeRate() {
    return estimatedExchangeRate;
  }

  public void setEstimatedExchangeRate(BigDecimal estimatedExchangeRate) {
    this.estimatedExchangeRate = estimatedExchangeRate;
  }

  public PayInMethod accountMethods(List<AccountMethod> accountMethods) {
    this.accountMethods = accountMethods;
    return this;
  }

  public PayInMethod addAccountMethodsItem(AccountMethod accountMethodsItem) {
    if (this.accountMethods == null) {
      this.accountMethods = new ArrayList<AccountMethod>();
    }
    this.accountMethods.add(accountMethodsItem);
    return this;
  }

   /**
   * Get accountMethods
   * @return accountMethods
  **/
  @Schema(description = "")
  public List<AccountMethod> getAccountMethods() {
    return accountMethods;
  }

  public void setAccountMethods(List<AccountMethod> accountMethods) {
    this.accountMethods = accountMethods;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayInMethod payInMethod = (PayInMethod) o;
    return Objects.equals(this.id, payInMethod.id) &&
        Objects.equals(this.code, payInMethod.code) &&
        Objects.equals(this.settlementCurrency, payInMethod.settlementCurrency) &&
        Objects.equals(this.requestedCurrency, payInMethod.requestedCurrency) &&
        Objects.equals(this.estimatedExchangeRate, payInMethod.estimatedExchangeRate) &&
        Objects.equals(this.accountMethods, payInMethod.accountMethods);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, code, settlementCurrency, requestedCurrency, estimatedExchangeRate, accountMethods);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayInMethod {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    settlementCurrency: ").append(toIndentedString(settlementCurrency)).append("\n");
    sb.append("    requestedCurrency: ").append(toIndentedString(requestedCurrency)).append("\n");
    sb.append("    estimatedExchangeRate: ").append(toIndentedString(estimatedExchangeRate)).append("\n");
    sb.append("    accountMethods: ").append(toIndentedString(accountMethods)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
