/*
 * BVNK API Endpoints
 * The BVNK API is designed to facilitate seamless and secure transactions including payments, channels, anddigital wallet transactions.
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AlternativeAddress;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Payment address details
 */
@Schema(description = "Payment address details")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-07-05T20:47:27.517449+02:00[Africa/Johannesburg]")

public class CryptoAddressDto {
  @SerializedName("address")
  private String address = null;

  @SerializedName("tag")
  private String tag = null;

  @SerializedName("protocol")
  private String protocol = null;

  @SerializedName("uri")
  private String uri = null;

  @SerializedName("alternatives")
  private List<AlternativeAddress> alternatives = null;

  public CryptoAddressDto address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Address to withdrawal funds to
   * @return address
  **/
  @Schema(example = "0xb794f5ea0ba39494ce839613fffba74279579268", description = "Address to withdrawal funds to")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public CryptoAddressDto tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * This is a payment destination tag. This fields isn&#x27;t null when the paidCurrency.currency value is XRP
   * @return tag
  **/
  @Schema(description = "This is a payment destination tag. This fields isn't null when the paidCurrency.currency value is XRP")
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }

  public CryptoAddressDto protocol(String protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * protocol behind a currency (ERC20 or TRC20)
   * @return protocol
  **/
  @Schema(example = "ERC20", description = "protocol behind a currency (ERC20 or TRC20)")
  public String getProtocol() {
    return protocol;
  }

  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  public CryptoAddressDto uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * The destination address URI for QR code
   * @return uri
  **/
  @Schema(example = "ethereum:0xABCDabcdABcDabcDaBCDAbcdABcdAbCdABcDABCd?value=1.1e18", description = "The destination address URI for QR code")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }

  public CryptoAddressDto alternatives(List<AlternativeAddress> alternatives) {
    this.alternatives = alternatives;
    return this;
  }

  public CryptoAddressDto addAlternativesItem(AlternativeAddress alternativesItem) {
    if (this.alternatives == null) {
      this.alternatives = new ArrayList<AlternativeAddress>();
    }
    this.alternatives.add(alternativesItem);
    return this;
  }

   /**
   * List of non-default addresses for other tokens
   * @return alternatives
  **/
  @Schema(description = "List of non-default addresses for other tokens")
  public List<AlternativeAddress> getAlternatives() {
    return alternatives;
  }

  public void setAlternatives(List<AlternativeAddress> alternatives) {
    this.alternatives = alternatives;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CryptoAddressDto cryptoAddressDto = (CryptoAddressDto) o;
    return Objects.equals(this.address, cryptoAddressDto.address) &&
        Objects.equals(this.tag, cryptoAddressDto.tag) &&
        Objects.equals(this.protocol, cryptoAddressDto.protocol) &&
        Objects.equals(this.uri, cryptoAddressDto.uri) &&
        Objects.equals(this.alternatives, cryptoAddressDto.alternatives);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, tag, protocol, uri, alternatives);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CryptoAddressDto {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    alternatives: ").append(toIndentedString(alternatives)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
