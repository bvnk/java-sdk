/*
 * BVNK API Endpoints
 * The BVNK API is designed to facilitate seamless and secure transactions including payments, channels, anddigital wallet transactions.
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * NetworkFee
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-07-05T20:47:27.517449+02:00[Africa/Johannesburg]")

public class NetworkFee {
  @SerializedName("paidCurrency")
  private String paidCurrency = null;

  @SerializedName("paidAmount")
  private BigDecimal paidAmount = null;

  @SerializedName("displayCurrency")
  private String displayCurrency = null;

  @SerializedName("displayAmount")
  private BigDecimal displayAmount = null;

  public NetworkFee paidCurrency(String paidCurrency) {
    this.paidCurrency = paidCurrency;
    return this;
  }

   /**
   * Get paidCurrency
   * @return paidCurrency
  **/
  @Schema(description = "")
  public String getPaidCurrency() {
    return paidCurrency;
  }

  public void setPaidCurrency(String paidCurrency) {
    this.paidCurrency = paidCurrency;
  }

  public NetworkFee paidAmount(BigDecimal paidAmount) {
    this.paidAmount = paidAmount;
    return this;
  }

   /**
   * Get paidAmount
   * @return paidAmount
  **/
  @Schema(description = "")
  public BigDecimal getPaidAmount() {
    return paidAmount;
  }

  public void setPaidAmount(BigDecimal paidAmount) {
    this.paidAmount = paidAmount;
  }

  public NetworkFee displayCurrency(String displayCurrency) {
    this.displayCurrency = displayCurrency;
    return this;
  }

   /**
   * Get displayCurrency
   * @return displayCurrency
  **/
  @Schema(description = "")
  public String getDisplayCurrency() {
    return displayCurrency;
  }

  public void setDisplayCurrency(String displayCurrency) {
    this.displayCurrency = displayCurrency;
  }

  public NetworkFee displayAmount(BigDecimal displayAmount) {
    this.displayAmount = displayAmount;
    return this;
  }

   /**
   * Get displayAmount
   * @return displayAmount
  **/
  @Schema(description = "")
  public BigDecimal getDisplayAmount() {
    return displayAmount;
  }

  public void setDisplayAmount(BigDecimal displayAmount) {
    this.displayAmount = displayAmount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkFee networkFee = (NetworkFee) o;
    return Objects.equals(this.paidCurrency, networkFee.paidCurrency) &&
        Objects.equals(this.paidAmount, networkFee.paidAmount) &&
        Objects.equals(this.displayCurrency, networkFee.displayCurrency) &&
        Objects.equals(this.displayAmount, networkFee.displayAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paidCurrency, paidAmount, displayCurrency, displayAmount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkFee {\n");
    
    sb.append("    paidCurrency: ").append(toIndentedString(paidCurrency)).append("\n");
    sb.append("    paidAmount: ").append(toIndentedString(paidAmount)).append("\n");
    sb.append("    displayCurrency: ").append(toIndentedString(displayCurrency)).append("\n");
    sb.append("    displayAmount: ").append(toIndentedString(displayAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
